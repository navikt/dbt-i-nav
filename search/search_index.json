{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Installere DBT p\u00e5 VDI \u00b6 Forutsetninger \u00b6 For \u00e5 installere dbt m\u00e5 du ha f\u00f8lgende installert: Python 3.8.x PIP og oppsett av proxy GIT / GitHub Desktop Oracle client library Anbefalinger \u00b6 For en god utvikleropplevelse anbefaler vi deg \u00e5 ha f\u00f8lgende installert: Visual studio code eller en annen tekst editor SQLFluff","title":"Installere DBT p\u00e5 VDI"},{"location":"#installere-dbt-pa-vdi","text":"","title":"Installere DBT p\u00e5 VDI"},{"location":"#forutsetninger","text":"For \u00e5 installere dbt m\u00e5 du ha f\u00f8lgende installert: Python 3.8.x PIP og oppsett av proxy GIT / GitHub Desktop Oracle client library","title":"Forutsetninger"},{"location":"#anbefalinger","text":"For en god utvikleropplevelse anbefaler vi deg \u00e5 ha f\u00f8lgende installert: Visual studio code eller en annen tekst editor SQLFluff","title":"Anbefalinger"},{"location":"arkitektur/style_guide/","text":"DBT Stil Guide \u00b6 forket fra https://github.com/dbt-labs/corp/blob/main/dbt_style_guide.md Modell Naming \u00b6 V\u00e5r modellere organiserers inn i tre hovedgrupper: staging, marts, base/intermediate. See f\u00f8lgnede diskusjon . The navngiving blir som f\u00f8lger: \u251c\u2500\u2500 dbt_project.yml \u2514\u2500\u2500 models \u251c\u2500\u2500 marter | \u2514\u2500\u2500 core | \u251c\u2500\u2500 mellomlager | | \u251c\u2500\u2500 mellomlager.yml | | \u251c\u2500\u2500 posteringer__unionisert.sql | | \u2514\u2500\u2500 posteringer__gruppert.sql | \u251c\u2500\u2500 core.docs | \u251c\u2500\u2500 dim_artskonti | \u251c\u2500\u2500 dim_artskonti.yml | \u2514\u2500\u2500 dim_artskonti.sql | \u251c\u2500\u2500 dim_konstnadssteder | \u251c\u2500\u2500 dim_konstnadssteder.yml | \u2514\u2500\u2500 dim_konstnadssteder.sql | \u2514\u2500\u2500 fak_hovedbok_posteringer | \u251c\u2500\u2500 fak_hovedbok_posteringer.yml | \u2514\u2500\u2500 fak_hovedbok_posteringer.sql \u2514\u2500\u2500 stager \u2514\u2500\u2500 oebs \u251c\u2500\u2500 base | \u251c\u2500\u2500 base.yml | \u2514\u2500\u2500 base__oebs_kontoplan.sql \u251c\u2500\u2500 src_oebs.yml \u251c\u2500\u2500 src_oebs.docs \u251c\u2500\u2500 stg_oebs__posteringerslinjer | \u251c\u2500\u2500 stg_oebs__posteringerslinjer.yml | \u2514\u2500\u2500 stg_oebs__posteringerslinjer.sql \u251c\u2500\u2500 stg_oebs__budjsett_balanser | \u251c\u2500\u2500 stg_oebs__budjsett_balanser.yml | \u2514\u2500\u2500 stg_oebs__budjsett_balanser.sql - All objekter oppgis p\u00e5 flertalls form, slik som: stg_oebs__hovedbok_posteringslinjer , stg_oebs__artskonti , etc. - Base tabeller prefikses med base__ , slik som: base__<source>_<object> - Mellomlagringstabeller skal avsluttes med et fortidsverb som indikerer hvilken handling som er gjort p\u00e5 objektet, slik som: hovedbok_posteringslinjer__filtrert_budsjett - Datatorg, eller marter, er fordelt mellom fakter (uforandrelig, verb) og dimensjoner (foranderlig, subjekt) og prefikses med fak_ og dim_ , henholdvis. - Staged strukter inneholder alle kolonner fra r\u00e5-tabellen og utvides med avledede kolonner, for \u00e5 angi naturlig n\u00f8kler, hashed n\u00f8kler, omd\u00f8ping av kolonnenavn, etc. Model konfigurasjon \u00b6 Model-spesifike attributer (som sort/dist keys) skal spesifiseres i modellen. Hvis en spesifikk konfigurasjon som gjelder alle modeller i en folder, burde dette spesifiseres i dbt_project.yml . Modell konfigurationer skal spesifiseres slik: {{ config ( materialized = 'table' , sort = 'id' , dist = 'id' ) }} - Marter b\u00f8r alltid configureres som tabeller - med mindre det er sv\u00e6rt gode grunner til \u00e5 ikke gj\u00f8re det. DBT konvensjoner \u00b6 Kun stg_ og base_ sp\u00f8r mot source er. Alle andre ref andre modeller. Tester \u00b6 Hver underfolder inneholder en .yml fil som tester alle modeller i folderen. Navnestandarden skal v\u00e6re <folder-navn>.yml . Som et minimum, skal unique og not_null v\u00e6re testet p\u00e5 prim\u00e6r n\u00f8kkeler Navngivining og felt konvensjoner \u00b6 Skjema, tabell og kolonne nanv skal v\u00e6re snake_case . Bruk navn basert p\u00e5 business terminologien, i stedet for kilde terminology. Hver model skal ha en prim\u00e6r n\u00f8kkel. Prim\u00e6r n\u00f8kkeler i modellen navngis som pk_<objekt> , alts\u00e5 pk_dim_eperson . Fremmed n\u00f8kkeler angis som fk_<objekt> , tidsl\u00f8se enhets n\u00f8kkeler angis som ek_<objekt> og naturlige n\u00f8kkeler angis som lk_<objekt> . For base og stage modeller skal felter v\u00e6re ordnet inne kategorier, fra identifikatorer til tidsstempler tilslutt. Tidsstempel kolonner skal v\u00e6ver navngitt som <hendelse>_ts , e.g. lastet_ts , og skal v\u00e6re p\u00e5 UTC. for avvikende tidszoner skal tidzonen indikeres ved suffiks, e.g lastet_ts_pt . Boolean verdier og skal oppgis mot er_ eller har_ og uttrykkes med 1 for Ja og 0 for Nei . Bel\u00f8ps kolonner skal ha suffiks _nok for, flyttalls, bel\u00f8p i kroner, og _orer for heltall bel\u00f8p i \u00f8rer. S\u00e6r norske bokstaver som \u00c6, \u00d8, \u00c5 skal angis som ae , a og o . Unng\u00e5r reservert word som kolonne navn. Bruk samme feltnavn gjennom alle modellene hvor mulig, e.g. n\u00f8kkelen til dim_person skal v\u00e6re pk_dim_person og ikke pk_bruker . CTEer \u00b6 For mer informasjon om hvorfor vi bruker CTEer, see f\u00f8lgende post . Alle {{ ref('...') }} settning skal plasseres i en egen CTE, ved toppen av fila. Hvor det er mulig, skal en CTE gj\u00f8re en og kun en logisk mengde arbeid. CTE navn skal v\u00e6re ordrike og beskrive hva denne faktisk gj\u00f8r. CTE er med forvirrende eller avansert logik skal kommenteres like etter at den er definert. with hendelser_vask as ( -- Kommentarer -- mer kommentarer ... ) ), CTEer som gjenbrukes i feller modeller skal tas ut og bli egne modeller. Modeller b\u00f8r avsluttest med en endelig CTE som selekterer hele det endelig produktet f\u00f8r modelen avslutted SELECT * FROM endelig . CTEene skal formatere som f\u00f8lger: WITH hendelser AS ( ... ), -- CTE comments go here filtrerte_hendelser AS ( ... ), endelig AS ( SELECT * FROM filtrerte_hendelser ), SELECT * FROM endelig SQL stil guide \u00b6 Sett komma p\u00e5 slutten setningen Bruke fire mellom rom for \u00e5 indentere koden, uten om ved predikatet, som skal v\u00e6re p\u00e5 linje med WHERE Ingen linjer skal v\u00e6re lenger enn 80 tegn All felt navn skal v\u00e6re skrevet med sm\u00e5 bokstaver, og alle funksjonsnavn ( SELECT , WHERE , LEAD , etc.) med STORE. Bruk alltid AS for \u00e5 aliase tabeller og felt. Alle felt skal angis f\u00f8r alle aggregater og vindu funskjoner. Aggregering skal skal l\u00f8ses s\u00e5 tidlig som mulig, f\u00f8r en joiner med andre tabeller. ORDER BY og GROUP BY skal v\u00e6r angitt med nummer i stedet for kolonne navn (se f\u00f8lgende for why). Gruppering b\u00f8r gj\u00f8res p\u00e5 kun noen f\u00e5 kolonne verdier. Bruk helst UNION ALL fremfor UNIO * Unng\u00e5 bruk tabell alias i JOIN criterer. Det er ofte vanskelig \u00e5 forst\u00e5 hvor tabellen \"c\" kommer fra. Hvis en joiner to eller flere tabeller, alltid prefiks kolonenne med et table alias. Hvis en selekterer fra kun en tabell trengs ingen prefiks. Skriv eksplisite joins, alts\u00e5 skriv INNER JOIN instead of JOIN ). Bruk LEFT JOIN fremfor RIGHT JOIN Ikke optimaliserer for f\u00e5 linjer kode. Nye linjer er billig, hjerner er dyre Eksempel SQL \u00b6 WITH min_data AS ( SELECT * FROM {{ ref ( 'min_data' ) }} ), en_cte AS ( SELECT * FROM {{ ref ( 'en_cte' ) }} ), en_cte_agg AS ( SELECT id , SUM ( felt_4 ) AS total_felt_4 , MAX ( felt_5 ) AS max_felt_5 FROM en_cte GROUP BY 1 ), endelig AS ( SELECT [ DISITNCT ] min_data . felt_1 , min_data . felt_2 , min_data . felt_3 , -- Bruk linjeshift for visuelt separere kalkulasjoner inn i blokker. CASE WHEN min_data . kansellerings_dato IS NULL AND min_data . utgangs_dato is not null THEN utgangsdato_date WHEN my_data . kansellerings_dato IS NULL THEN my_data . start_dato + 7 ELSE my_data . kansellerings_date END AS kansellerings_dato , en_cte_agg . total_felt_4 , en_cte_agg . max_felt_5 FROM min_data LEFT JOIN en_cte_agg ON min_data . id = en_cte_agg . id WHERE min_data . felt_1 = 'abc' AND ( min_data . felt_2 = 'def' OR min_data . felt_2 = 'ghi' ) HAVING COUNT ( * ) > 1 ) SELECT * FROM final Bruk LEFT JOIN fremfor RIGHT JOIN : SELECT reiser . * , sjaforer . rating AS driver_rating , passasjerer . rating AS rider_rating FROM resier LEFT JOIN personer AS sjaforer ON reiser . fk_personer_sjaforer = sjaforer . pk_personer LEFT JOIN personer AS passasjerer ON reiser . fk_personer_passasjerer = sjaforer . pk_personer YAML stil guide \u00b6 Setning indenteres med to mellomrom Lister skal v\u00e6re indentert Bruk linjeskift for \u00e5 separere lister n\u00e5r n\u00f8dvendig. Linjer skal ikke v\u00e6re lenger en 80 karakterer Eksample YAML \u00b6 version : 2 models : - name : hendelser columns : - name : pk_hendelser description : Dette er n prim\u00e6rn\u00f8kkel tests : - unique - not_null - name : hendelse_ts description : \"N\u00e5r hendelse skjedde i UTC (eg. 2018-01-01 12:00:00)\" tests : - not_null - name : fk_brukere description : Brukeren som st\u00e5 for hendelsen tests : - not_null - relationships : to : ref('brukere') field : pk_brukere Jinja stil guide \u00b6 Ved inklusjon av Jinja kode bruk mellomrom p\u00e5 iden av klammene {{ slik }} istedefor {{slik}} Bruk ny linje for \u00e5 dele opp logik i Jinja blokker","title":"Style guide"},{"location":"arkitektur/style_guide/#dbt-stil-guide","text":"forket fra https://github.com/dbt-labs/corp/blob/main/dbt_style_guide.md","title":"DBT Stil Guide"},{"location":"arkitektur/style_guide/#modell-naming","text":"V\u00e5r modellere organiserers inn i tre hovedgrupper: staging, marts, base/intermediate. See f\u00f8lgnede diskusjon . The navngiving blir som f\u00f8lger: \u251c\u2500\u2500 dbt_project.yml \u2514\u2500\u2500 models \u251c\u2500\u2500 marter | \u2514\u2500\u2500 core | \u251c\u2500\u2500 mellomlager | | \u251c\u2500\u2500 mellomlager.yml | | \u251c\u2500\u2500 posteringer__unionisert.sql | | \u2514\u2500\u2500 posteringer__gruppert.sql | \u251c\u2500\u2500 core.docs | \u251c\u2500\u2500 dim_artskonti | \u251c\u2500\u2500 dim_artskonti.yml | \u2514\u2500\u2500 dim_artskonti.sql | \u251c\u2500\u2500 dim_konstnadssteder | \u251c\u2500\u2500 dim_konstnadssteder.yml | \u2514\u2500\u2500 dim_konstnadssteder.sql | \u2514\u2500\u2500 fak_hovedbok_posteringer | \u251c\u2500\u2500 fak_hovedbok_posteringer.yml | \u2514\u2500\u2500 fak_hovedbok_posteringer.sql \u2514\u2500\u2500 stager \u2514\u2500\u2500 oebs \u251c\u2500\u2500 base | \u251c\u2500\u2500 base.yml | \u2514\u2500\u2500 base__oebs_kontoplan.sql \u251c\u2500\u2500 src_oebs.yml \u251c\u2500\u2500 src_oebs.docs \u251c\u2500\u2500 stg_oebs__posteringerslinjer | \u251c\u2500\u2500 stg_oebs__posteringerslinjer.yml | \u2514\u2500\u2500 stg_oebs__posteringerslinjer.sql \u251c\u2500\u2500 stg_oebs__budjsett_balanser | \u251c\u2500\u2500 stg_oebs__budjsett_balanser.yml | \u2514\u2500\u2500 stg_oebs__budjsett_balanser.sql - All objekter oppgis p\u00e5 flertalls form, slik som: stg_oebs__hovedbok_posteringslinjer , stg_oebs__artskonti , etc. - Base tabeller prefikses med base__ , slik som: base__<source>_<object> - Mellomlagringstabeller skal avsluttes med et fortidsverb som indikerer hvilken handling som er gjort p\u00e5 objektet, slik som: hovedbok_posteringslinjer__filtrert_budsjett - Datatorg, eller marter, er fordelt mellom fakter (uforandrelig, verb) og dimensjoner (foranderlig, subjekt) og prefikses med fak_ og dim_ , henholdvis. - Staged strukter inneholder alle kolonner fra r\u00e5-tabellen og utvides med avledede kolonner, for \u00e5 angi naturlig n\u00f8kler, hashed n\u00f8kler, omd\u00f8ping av kolonnenavn, etc.","title":"Modell Naming"},{"location":"arkitektur/style_guide/#model-konfigurasjon","text":"Model-spesifike attributer (som sort/dist keys) skal spesifiseres i modellen. Hvis en spesifikk konfigurasjon som gjelder alle modeller i en folder, burde dette spesifiseres i dbt_project.yml . Modell konfigurationer skal spesifiseres slik: {{ config ( materialized = 'table' , sort = 'id' , dist = 'id' ) }} - Marter b\u00f8r alltid configureres som tabeller - med mindre det er sv\u00e6rt gode grunner til \u00e5 ikke gj\u00f8re det.","title":"Model konfigurasjon"},{"location":"arkitektur/style_guide/#dbt-konvensjoner","text":"Kun stg_ og base_ sp\u00f8r mot source er. Alle andre ref andre modeller.","title":"DBT konvensjoner"},{"location":"arkitektur/style_guide/#tester","text":"Hver underfolder inneholder en .yml fil som tester alle modeller i folderen. Navnestandarden skal v\u00e6re <folder-navn>.yml . Som et minimum, skal unique og not_null v\u00e6re testet p\u00e5 prim\u00e6r n\u00f8kkeler","title":"Tester"},{"location":"arkitektur/style_guide/#navngivining-og-felt-konvensjoner","text":"Skjema, tabell og kolonne nanv skal v\u00e6re snake_case . Bruk navn basert p\u00e5 business terminologien, i stedet for kilde terminology. Hver model skal ha en prim\u00e6r n\u00f8kkel. Prim\u00e6r n\u00f8kkeler i modellen navngis som pk_<objekt> , alts\u00e5 pk_dim_eperson . Fremmed n\u00f8kkeler angis som fk_<objekt> , tidsl\u00f8se enhets n\u00f8kkeler angis som ek_<objekt> og naturlige n\u00f8kkeler angis som lk_<objekt> . For base og stage modeller skal felter v\u00e6re ordnet inne kategorier, fra identifikatorer til tidsstempler tilslutt. Tidsstempel kolonner skal v\u00e6ver navngitt som <hendelse>_ts , e.g. lastet_ts , og skal v\u00e6re p\u00e5 UTC. for avvikende tidszoner skal tidzonen indikeres ved suffiks, e.g lastet_ts_pt . Boolean verdier og skal oppgis mot er_ eller har_ og uttrykkes med 1 for Ja og 0 for Nei . Bel\u00f8ps kolonner skal ha suffiks _nok for, flyttalls, bel\u00f8p i kroner, og _orer for heltall bel\u00f8p i \u00f8rer. S\u00e6r norske bokstaver som \u00c6, \u00d8, \u00c5 skal angis som ae , a og o . Unng\u00e5r reservert word som kolonne navn. Bruk samme feltnavn gjennom alle modellene hvor mulig, e.g. n\u00f8kkelen til dim_person skal v\u00e6re pk_dim_person og ikke pk_bruker .","title":"Navngivining og felt konvensjoner"},{"location":"arkitektur/style_guide/#cteer","text":"For mer informasjon om hvorfor vi bruker CTEer, see f\u00f8lgende post . Alle {{ ref('...') }} settning skal plasseres i en egen CTE, ved toppen av fila. Hvor det er mulig, skal en CTE gj\u00f8re en og kun en logisk mengde arbeid. CTE navn skal v\u00e6re ordrike og beskrive hva denne faktisk gj\u00f8r. CTE er med forvirrende eller avansert logik skal kommenteres like etter at den er definert. with hendelser_vask as ( -- Kommentarer -- mer kommentarer ... ) ), CTEer som gjenbrukes i feller modeller skal tas ut og bli egne modeller. Modeller b\u00f8r avsluttest med en endelig CTE som selekterer hele det endelig produktet f\u00f8r modelen avslutted SELECT * FROM endelig . CTEene skal formatere som f\u00f8lger: WITH hendelser AS ( ... ), -- CTE comments go here filtrerte_hendelser AS ( ... ), endelig AS ( SELECT * FROM filtrerte_hendelser ), SELECT * FROM endelig","title":"CTEer"},{"location":"arkitektur/style_guide/#sql-stil-guide","text":"Sett komma p\u00e5 slutten setningen Bruke fire mellom rom for \u00e5 indentere koden, uten om ved predikatet, som skal v\u00e6re p\u00e5 linje med WHERE Ingen linjer skal v\u00e6re lenger enn 80 tegn All felt navn skal v\u00e6re skrevet med sm\u00e5 bokstaver, og alle funksjonsnavn ( SELECT , WHERE , LEAD , etc.) med STORE. Bruk alltid AS for \u00e5 aliase tabeller og felt. Alle felt skal angis f\u00f8r alle aggregater og vindu funskjoner. Aggregering skal skal l\u00f8ses s\u00e5 tidlig som mulig, f\u00f8r en joiner med andre tabeller. ORDER BY og GROUP BY skal v\u00e6r angitt med nummer i stedet for kolonne navn (se f\u00f8lgende for why). Gruppering b\u00f8r gj\u00f8res p\u00e5 kun noen f\u00e5 kolonne verdier. Bruk helst UNION ALL fremfor UNIO * Unng\u00e5 bruk tabell alias i JOIN criterer. Det er ofte vanskelig \u00e5 forst\u00e5 hvor tabellen \"c\" kommer fra. Hvis en joiner to eller flere tabeller, alltid prefiks kolonenne med et table alias. Hvis en selekterer fra kun en tabell trengs ingen prefiks. Skriv eksplisite joins, alts\u00e5 skriv INNER JOIN instead of JOIN ). Bruk LEFT JOIN fremfor RIGHT JOIN Ikke optimaliserer for f\u00e5 linjer kode. Nye linjer er billig, hjerner er dyre","title":"SQL stil guide"},{"location":"arkitektur/style_guide/#eksempel-sql","text":"WITH min_data AS ( SELECT * FROM {{ ref ( 'min_data' ) }} ), en_cte AS ( SELECT * FROM {{ ref ( 'en_cte' ) }} ), en_cte_agg AS ( SELECT id , SUM ( felt_4 ) AS total_felt_4 , MAX ( felt_5 ) AS max_felt_5 FROM en_cte GROUP BY 1 ), endelig AS ( SELECT [ DISITNCT ] min_data . felt_1 , min_data . felt_2 , min_data . felt_3 , -- Bruk linjeshift for visuelt separere kalkulasjoner inn i blokker. CASE WHEN min_data . kansellerings_dato IS NULL AND min_data . utgangs_dato is not null THEN utgangsdato_date WHEN my_data . kansellerings_dato IS NULL THEN my_data . start_dato + 7 ELSE my_data . kansellerings_date END AS kansellerings_dato , en_cte_agg . total_felt_4 , en_cte_agg . max_felt_5 FROM min_data LEFT JOIN en_cte_agg ON min_data . id = en_cte_agg . id WHERE min_data . felt_1 = 'abc' AND ( min_data . felt_2 = 'def' OR min_data . felt_2 = 'ghi' ) HAVING COUNT ( * ) > 1 ) SELECT * FROM final Bruk LEFT JOIN fremfor RIGHT JOIN : SELECT reiser . * , sjaforer . rating AS driver_rating , passasjerer . rating AS rider_rating FROM resier LEFT JOIN personer AS sjaforer ON reiser . fk_personer_sjaforer = sjaforer . pk_personer LEFT JOIN personer AS passasjerer ON reiser . fk_personer_passasjerer = sjaforer . pk_personer","title":"Eksempel SQL"},{"location":"arkitektur/style_guide/#yaml-stil-guide","text":"Setning indenteres med to mellomrom Lister skal v\u00e6re indentert Bruk linjeskift for \u00e5 separere lister n\u00e5r n\u00f8dvendig. Linjer skal ikke v\u00e6re lenger en 80 karakterer","title":"YAML stil guide"},{"location":"arkitektur/style_guide/#eksample-yaml","text":"version : 2 models : - name : hendelser columns : - name : pk_hendelser description : Dette er n prim\u00e6rn\u00f8kkel tests : - unique - not_null - name : hendelse_ts description : \"N\u00e5r hendelse skjedde i UTC (eg. 2018-01-01 12:00:00)\" tests : - not_null - name : fk_brukere description : Brukeren som st\u00e5 for hendelsen tests : - not_null - relationships : to : ref('brukere') field : pk_brukere","title":"Eksample YAML"},{"location":"arkitektur/style_guide/#jinja-stil-guide","text":"Ved inklusjon av Jinja kode bruk mellomrom p\u00e5 iden av klammene {{ slik }} istedefor {{slik}} Bruk ny linje for \u00e5 dele opp logik i Jinja blokker","title":"Jinja stil guide"},{"location":"prosjekter/dvh-sykefravar-dmx/","text":"dvh-sykefravar-dmx \u00b6 Pilot prosjekt for bruk av dbt. Form\u00e5l \u00b6 TODO! Analysetorg brukt til syfo (sykefrav\u00e6rsoppfoling) Dokumentasjon \u00b6 DBT: https://navikt.github.io/dvh-sykefravar-dmx GitHub: navikt/dvh-sykefravar-dmx Confluence: Datavarehus/Systemomr\u00e5der/Sykefrav\u00e6r/Sykefrav\u00e6r - sykefrav\u00e6rsoppf\u00f8lging - intern statistikk for NAV-kontorene NAV Datavarehus/Om oss/Team St\u00f8nadsstatistikk (STO)/Produktteam Sykefrav\u00e6r / Dagens sykefrav\u00e6rstatistikk i Datavarehuset","title":"dvh-sykefravar-dmx"},{"location":"prosjekter/dvh-sykefravar-dmx/#dvh-sykefravar-dmx","text":"Pilot prosjekt for bruk av dbt.","title":"dvh-sykefravar-dmx"},{"location":"prosjekter/dvh-sykefravar-dmx/#formal","text":"TODO! Analysetorg brukt til syfo (sykefrav\u00e6rsoppfoling)","title":"Form\u00e5l"},{"location":"prosjekter/dvh-sykefravar-dmx/#dokumentasjon","text":"DBT: https://navikt.github.io/dvh-sykefravar-dmx GitHub: navikt/dvh-sykefravar-dmx Confluence: Datavarehus/Systemomr\u00e5der/Sykefrav\u00e6r/Sykefrav\u00e6r - sykefrav\u00e6rsoppf\u00f8lging - intern statistikk for NAV-kontorene NAV Datavarehus/Om oss/Team St\u00f8nadsstatistikk (STO)/Produktteam Sykefrav\u00e6r / Dagens sykefrav\u00e6rstatistikk i Datavarehuset","title":"Dokumentasjon"},{"location":"vdi/dbt/","text":"DBT \u00b6 Det finnes en offisiell oracle adapter for dbt v1.x. Gjerne start med \u00e5 ta en titt p\u00e5 denne installasjonsguiden f\u00f8rst. Installasjon \u00b6 dbt kan installeres sammen med oracle adapteren med kommandoen: pip install dbt-oracle Nedlasting feiler $ pip install dbt-oracle WARNING: Retrying ( Retry ( total = 4 , connect = None, read = None, redirect = None, status = None )) after connection broken by 'SSLError(SSLCertVerificationError(1, ' [ SSL: CERTIFICATE_VERIFY_FAILED ] certificate verify failed: unable to get local issuer certificate ( _ssl.c:1131 ) '))' : /simple/dbt-oracle/ ... Could not fetch URL https://pypi.org/simple/dbt-oracle/: There was a problem confirming the ssl certificate: HTTPSConnectionPool ( host = 'pypi.org' , port = 443 ) : Max retries exceeded with url: /simple/dbt-oracle/ ( Caused by SSLError ( SSLCertVerificationError ( 1 , '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1131)' ))) pip.ini config er mest sannsynlig plassert p\u00e5 feil sted. Du kan verifisere at pip.ini ikke fungere ved \u00e5 installere dbt-oracle med trusted-host parametere: pip install dbt-oracle --upgrade --trusted-host pypi.org --trusted-host files.pythonhosted.org --trusted-host pypi.python.org Installasjon feiler I noen tilfeller har vi opplevd at Microsoft Visual C++ mangler. Installasjon feiler *** stack trace **** ImportError : cannot import name 'soft_unicode' from 'markupsafe' ( c : \\ users \\ **** \\ appdata \\ local \\ programs \\ python \\ python38 \\ lib \\ site - packages \\ markupsafe \\ __init__ . py ) markupsafe nedgraderes til versjon 2.0.1 pip uninstall markusafe ` pip install markupsafe == 2 .0.1 ` Verifiser med dbt --version dbt --version Success $ dbt --version installed version: 0 .19.2 latest version: 1 .0.0 Your version of dbt is out of date! You can find instructions for upgrading here: https://docs.getdbt.com/docs/installation Plugins: - oracle: 0 .19.1 Fortsett med opprettelse av profil Opprettelse av profil \u00b6 Av sikkerhetshensyn anbefaler vi og oracle \u00e5 bruke milj\u00f8variabler for \u00e5 holde p\u00e5 hemmeligheter. Vi har derfor laget et script som kan ligge i dbt-prosjektet. Scriptet m\u00e5 kj\u00f8res hver gang en starter en ny terminal eller \u00f8nsker \u00e5 bytte target (db). Scriptet vill midlertidlig opprette milj\u00f8variablene i terminal-sesjonen for target, brukernavn, passord og schema. Scriptet kan lastes ned fra navikt/dvh-sykefravar-dmx/setup_db_user.ps1 . profiles.yml skal opprettes under C:\\Users\\<NAV-IDENT>\\.dbt\\profiles.yml med f\u00f8lgende innhold: <navn p\u00e5 dbt prosjekt> : target : \"{{env_var('DBT_DB_TARGET')}}\" outputs : dwhu1 : type : oracle user : \"{{env_var('DBT_DB_USER')}}\" pass : \"{{env_var('DBT_DB_PASSWORD')}}\" protocol : tcp host : dm07-scan.adeo.no port : 1521 service : dwhu1 database : dwhu1 schema : \"{{env_var('DBT_DB_SCHEMA')}}\" threads : 4 dwhr : type : oracle user : \"{{env_var('DBT_DB_USER')}}\" pass : \"{{env_var('DBT_DB_PASSWORD')}}\" protocol : tcp host : dm07-scan.adeo.no port : 1521 service : dwh_ha database : dwh schema : \"{{env_var('DBT_DB_SCHEMA')}}\" threads : 4 dwhq0 : type : oracle user : \"{{env_var('DBT_DB_USER')}}\" pass : \"{{env_var('DBT_DB_PASSWORD')}}\" protocol : tcp host : dm07-scan.adeo.no port : 1521 service : dwhq0 database : dwhq0 schema : \"{{env_var('DBT_DB_SCHEMA')}}\" threads : 4 prod : type : oracle user : \"{{env_var('DBT_DB_USER')}}\" pass : \"{{env_var('DBT_DB_PASSWORD')}}\" protocol : tcp host : dm08-scan.adeo.no port : 1521 service : DWH_HA database : DWH schema : \"{{env_var('DBT_DB_SCHEMA')}}\" threads : 4 config : send_anonymous_usage_stats : False Etter profilen er p\u00e5 plass kan du verifisere at dbt fungerer ved \u00e5 kj\u00f8re .\\setup_db_user.ps1 etterfulgt av dbt debug fra prosjektmappen. Success $ . \\s etup_db_user.ps1 Target db: dwhu1 Schema: cmdlet Get-Credential at command pipeline position 1 Supply values for the following parameters: Credential $ dbt debug 09 :15:08 Running with dbt = 1 .1.1 dbt version: 1 .1.1 python version: 3 .8.10 python path: c: \\u sers \\* *** \\a ppdata \\l ocal \\p rograms \\p ython \\p ython38 \\p ython.exe os info: Windows-10-10.0.19044-SP0 Using profiles.yml file at C: \\U sers \\* *** \\. dbt \\p rofiles.yml Using dbt_project.yml file at C: \\U sers \\* *** \\g it \\d vh-sykefravar-dmx \\d bt_project.yml 09 :15:08 oracle adapter: Running in cx mode Configuration: profiles.yml file [ OK found and valid ] dbt_project.yml file [ OK found and valid ] Required dependencies: - git [ OK found ] Connection: user: **** database: dwhu1 schema: **** protocol: tcp host: dm07-scan.adeo.no port: 1521 tns_name: None service: dwhu1 connection_string: None shardingkey: [] supershardingkey: [] cclass: None purity: None Connection test: [ OK connection ok ] All checks passed! DBT er n\u00e5 installert og klart til bruk. Error Connection test: [ ERROR ] 2 checks failed: Error from git --help: Could not find command, ensure it is in the user ' s PATH and that the user has permissions to run it: \"git\" dbt was unable to connect to the specified database. The database returned the following error: >Database Error DPI-1047: Cannot locate a 64 -bit Oracle Client library: \"failed to get message for Windows Error 126\" . See https://cx-oracle.readthedocs.io/en/latest/user_guide/installation.html for help Check your database credentials and try again. For more information, visit: https://docs.getdbt.com/docs/configure-your-profile Oracle client library er mest sannsynlig ikke installert.","title":"DBT"},{"location":"vdi/dbt/#dbt","text":"Det finnes en offisiell oracle adapter for dbt v1.x. Gjerne start med \u00e5 ta en titt p\u00e5 denne installasjonsguiden f\u00f8rst.","title":"DBT"},{"location":"vdi/dbt/#installasjon","text":"dbt kan installeres sammen med oracle adapteren med kommandoen: pip install dbt-oracle Nedlasting feiler $ pip install dbt-oracle WARNING: Retrying ( Retry ( total = 4 , connect = None, read = None, redirect = None, status = None )) after connection broken by 'SSLError(SSLCertVerificationError(1, ' [ SSL: CERTIFICATE_VERIFY_FAILED ] certificate verify failed: unable to get local issuer certificate ( _ssl.c:1131 ) '))' : /simple/dbt-oracle/ ... Could not fetch URL https://pypi.org/simple/dbt-oracle/: There was a problem confirming the ssl certificate: HTTPSConnectionPool ( host = 'pypi.org' , port = 443 ) : Max retries exceeded with url: /simple/dbt-oracle/ ( Caused by SSLError ( SSLCertVerificationError ( 1 , '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1131)' ))) pip.ini config er mest sannsynlig plassert p\u00e5 feil sted. Du kan verifisere at pip.ini ikke fungere ved \u00e5 installere dbt-oracle med trusted-host parametere: pip install dbt-oracle --upgrade --trusted-host pypi.org --trusted-host files.pythonhosted.org --trusted-host pypi.python.org Installasjon feiler I noen tilfeller har vi opplevd at Microsoft Visual C++ mangler. Installasjon feiler *** stack trace **** ImportError : cannot import name 'soft_unicode' from 'markupsafe' ( c : \\ users \\ **** \\ appdata \\ local \\ programs \\ python \\ python38 \\ lib \\ site - packages \\ markupsafe \\ __init__ . py ) markupsafe nedgraderes til versjon 2.0.1 pip uninstall markusafe ` pip install markupsafe == 2 .0.1 ` Verifiser med dbt --version dbt --version Success $ dbt --version installed version: 0 .19.2 latest version: 1 .0.0 Your version of dbt is out of date! You can find instructions for upgrading here: https://docs.getdbt.com/docs/installation Plugins: - oracle: 0 .19.1 Fortsett med opprettelse av profil","title":"Installasjon"},{"location":"vdi/dbt/#opprettelse-av-profil","text":"Av sikkerhetshensyn anbefaler vi og oracle \u00e5 bruke milj\u00f8variabler for \u00e5 holde p\u00e5 hemmeligheter. Vi har derfor laget et script som kan ligge i dbt-prosjektet. Scriptet m\u00e5 kj\u00f8res hver gang en starter en ny terminal eller \u00f8nsker \u00e5 bytte target (db). Scriptet vill midlertidlig opprette milj\u00f8variablene i terminal-sesjonen for target, brukernavn, passord og schema. Scriptet kan lastes ned fra navikt/dvh-sykefravar-dmx/setup_db_user.ps1 . profiles.yml skal opprettes under C:\\Users\\<NAV-IDENT>\\.dbt\\profiles.yml med f\u00f8lgende innhold: <navn p\u00e5 dbt prosjekt> : target : \"{{env_var('DBT_DB_TARGET')}}\" outputs : dwhu1 : type : oracle user : \"{{env_var('DBT_DB_USER')}}\" pass : \"{{env_var('DBT_DB_PASSWORD')}}\" protocol : tcp host : dm07-scan.adeo.no port : 1521 service : dwhu1 database : dwhu1 schema : \"{{env_var('DBT_DB_SCHEMA')}}\" threads : 4 dwhr : type : oracle user : \"{{env_var('DBT_DB_USER')}}\" pass : \"{{env_var('DBT_DB_PASSWORD')}}\" protocol : tcp host : dm07-scan.adeo.no port : 1521 service : dwh_ha database : dwh schema : \"{{env_var('DBT_DB_SCHEMA')}}\" threads : 4 dwhq0 : type : oracle user : \"{{env_var('DBT_DB_USER')}}\" pass : \"{{env_var('DBT_DB_PASSWORD')}}\" protocol : tcp host : dm07-scan.adeo.no port : 1521 service : dwhq0 database : dwhq0 schema : \"{{env_var('DBT_DB_SCHEMA')}}\" threads : 4 prod : type : oracle user : \"{{env_var('DBT_DB_USER')}}\" pass : \"{{env_var('DBT_DB_PASSWORD')}}\" protocol : tcp host : dm08-scan.adeo.no port : 1521 service : DWH_HA database : DWH schema : \"{{env_var('DBT_DB_SCHEMA')}}\" threads : 4 config : send_anonymous_usage_stats : False Etter profilen er p\u00e5 plass kan du verifisere at dbt fungerer ved \u00e5 kj\u00f8re .\\setup_db_user.ps1 etterfulgt av dbt debug fra prosjektmappen. Success $ . \\s etup_db_user.ps1 Target db: dwhu1 Schema: cmdlet Get-Credential at command pipeline position 1 Supply values for the following parameters: Credential $ dbt debug 09 :15:08 Running with dbt = 1 .1.1 dbt version: 1 .1.1 python version: 3 .8.10 python path: c: \\u sers \\* *** \\a ppdata \\l ocal \\p rograms \\p ython \\p ython38 \\p ython.exe os info: Windows-10-10.0.19044-SP0 Using profiles.yml file at C: \\U sers \\* *** \\. dbt \\p rofiles.yml Using dbt_project.yml file at C: \\U sers \\* *** \\g it \\d vh-sykefravar-dmx \\d bt_project.yml 09 :15:08 oracle adapter: Running in cx mode Configuration: profiles.yml file [ OK found and valid ] dbt_project.yml file [ OK found and valid ] Required dependencies: - git [ OK found ] Connection: user: **** database: dwhu1 schema: **** protocol: tcp host: dm07-scan.adeo.no port: 1521 tns_name: None service: dwhu1 connection_string: None shardingkey: [] supershardingkey: [] cclass: None purity: None Connection test: [ OK connection ok ] All checks passed! DBT er n\u00e5 installert og klart til bruk. Error Connection test: [ ERROR ] 2 checks failed: Error from git --help: Could not find command, ensure it is in the user ' s PATH and that the user has permissions to run it: \"git\" dbt was unable to connect to the specified database. The database returned the following error: >Database Error DPI-1047: Cannot locate a 64 -bit Oracle Client library: \"failed to get message for Windows Error 126\" . See https://cx-oracle.readthedocs.io/en/latest/user_guide/installation.html for help Check your database credentials and try again. For more information, visit: https://docs.getdbt.com/docs/configure-your-profile Oracle client library er mest sannsynlig ikke installert.","title":"Opprettelse av profil"},{"location":"vdi/git/","text":"GIT \u00b6 Innstallering av GIT - har du den allerede er det flott. Denne finner du p\u00e5 felles disken under programvare. programvare\\git. Installer f.eks Git-2.30.2-64-bit. Legg installasjon directory inn i milj\u00f8variabel PATH. F.eks C:\\Users\\<brukernavn>\\AppData\\Local\\GitHubDesktop\\bin Oppdatere milj\u00f8variabler slik at utviklingsimaget kan kommunisere med Github. Dette er beskrevet i https://confluence.adeo.no/pages/viewpage.action?pageId=272519832 punkt 10c F\u00f8lgende legges inn som milj\u00f8 variabler https_proxy til http://webproxy-utvikler.nav.no:8088 http_proxy: http://155.55.60.117:8088/ no_proxy: localhost,127.0.0.1,*.adeo.no,.local,.adeo.no,.nav.no,.aetat.no,.devillo.no,.oera.no,devel Opprett et PAT (personal access token) som du m\u00e5 bruke som passord ved autentisering. Se https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token Alternativt kan du bruke GitHub Dekstop som setter dette opp for deg automatisk. Clone repositoriet. Husk \u00e5 bruke PAT opprettet i punkt 3. som passord om du ikke bruker GitHub Desktop.","title":"GIT"},{"location":"vdi/git/#git","text":"Innstallering av GIT - har du den allerede er det flott. Denne finner du p\u00e5 felles disken under programvare. programvare\\git. Installer f.eks Git-2.30.2-64-bit. Legg installasjon directory inn i milj\u00f8variabel PATH. F.eks C:\\Users\\<brukernavn>\\AppData\\Local\\GitHubDesktop\\bin Oppdatere milj\u00f8variabler slik at utviklingsimaget kan kommunisere med Github. Dette er beskrevet i https://confluence.adeo.no/pages/viewpage.action?pageId=272519832 punkt 10c F\u00f8lgende legges inn som milj\u00f8 variabler https_proxy til http://webproxy-utvikler.nav.no:8088 http_proxy: http://155.55.60.117:8088/ no_proxy: localhost,127.0.0.1,*.adeo.no,.local,.adeo.no,.nav.no,.aetat.no,.devillo.no,.oera.no,devel Opprett et PAT (personal access token) som du m\u00e5 bruke som passord ved autentisering. Se https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token Alternativt kan du bruke GitHub Dekstop som setter dette opp for deg automatisk. Clone repositoriet. Husk \u00e5 bruke PAT opprettet i punkt 3. som passord om du ikke bruker GitHub Desktop.","title":"GIT"},{"location":"vdi/miljovariabler/","text":"Legge til milj\u00f8variabler \u00b6 S\u00f8k etter milj\u00f8variabler Klikk p\u00e5: Rediger milj\u00f8bariabler for kontoen din Trykk p\u00e5 Ny... Gi variabelen et navn i Variabelnavn . Skriv inn path til programmet i Variabelverdi Trykk OK Marker Path variabelen Trykk Rediger... Trykk Ny Skriv inn navnet p\u00e5 variabelen du opprettet med syntaksen %<variabelnavn>% eks: %PIP% Trykk OK Trykk OK Note Husk at du m\u00e5 lukke cmd (ledetekst) og \u00e5pne p\u00e5 nytt for at endringen skal tre i kraft.","title":"Legge til milj\u00f8variabler"},{"location":"vdi/miljovariabler/#legge-til-miljvariabler","text":"S\u00f8k etter milj\u00f8variabler Klikk p\u00e5: Rediger milj\u00f8bariabler for kontoen din Trykk p\u00e5 Ny... Gi variabelen et navn i Variabelnavn . Skriv inn path til programmet i Variabelverdi Trykk OK Marker Path variabelen Trykk Rediger... Trykk Ny Skriv inn navnet p\u00e5 variabelen du opprettet med syntaksen %<variabelnavn>% eks: %PIP% Trykk OK Trykk OK Note Husk at du m\u00e5 lukke cmd (ledetekst) og \u00e5pne p\u00e5 nytt for at endringen skal tre i kraft.","title":"Legge til milj\u00f8variabler"},{"location":"vdi/oracle-client-library/","text":"Oracle client library \u00b6 Dette finnes p\u00e5 fellesdisken og mappen programvare\\oracle\\ og kan kopieres lokalt. Det er er instantclient-basiclite-windows som benyttes. Oppdater PATH milj\u00f8variabelen med path til oracle client library. Eksmpel: C: \\d ata \\i nstantclient-basiclite-windows \\i nstantclient_19_11 Note Se legg til milj\u00f8variabler hvis du ikke vet hvordan du oppdatere PATH.","title":"Oracle client library"},{"location":"vdi/oracle-client-library/#oracle-client-library","text":"Dette finnes p\u00e5 fellesdisken og mappen programvare\\oracle\\ og kan kopieres lokalt. Det er er instantclient-basiclite-windows som benyttes. Oppdater PATH milj\u00f8variabelen med path til oracle client library. Eksmpel: C: \\d ata \\i nstantclient-basiclite-windows \\i nstantclient_19_11 Note Se legg til milj\u00f8variabler hvis du ikke vet hvordan du oppdatere PATH.","title":"Oracle client library"},{"location":"vdi/pip/","text":"PIP og oppsett av proxy \u00b6 Sjekk om du har PIP \u00b6 Kj\u00f8r pip --version for \u00e5 se om pip er tilgjengelig: pip --version Success pip --version pip 21 .1.1 from c: \\u sers \\* **** \\a ppdata \\l ocal \\p rograms \\p ython \\p ython38 \\l ib \\s ite-packages \\p ip ( python 3 .8 ) Fortsett til \"Sett opp config fil for pip\" Failure pip --version 'pip' is not recognized as an internal or external command, operable program or batch file. Kj\u00f8r py -3 -m ensurepip for \u00e5 se om pip allerede eksisterer. Looking in links: c: \\U sers \\* *** \\A ppData \\L ocal \\T emp \\t mp4r6s0n91 Requirement already satisfied: setuptools in c: \\u sers \\* *** \\a ppdata \\l ocal \\p rograms \\p ython \\p ython38 \\l ib \\s ite-packages ( 58 .1.0 ) Requirement already satisfied: pip in c: \\u sers \\* *** \\a ppdata \\l ocal \\p rograms \\p ython \\p ython38 \\l ib \\s ite-packages ( 21 .2.4 ) I dette tilfelle m\u00e5 milj\u00f8variabelen PATH oppdateres. Bruk gjerne Fil utforsker for \u00e5 finne riktig path men normalt ligger PIP under: c: \\u sers \\< brukernavn> \\a ppdata \\l ocal \\p rograms \\p ython \\p ython38 \\s cripts Info Se legg til milj\u00f8variabler hvis du ikke vet hvordan du oppdatere PATH . Husk at du m\u00e5 lukke og \u00e5pne cmd (ledetekst) etter path variabel er lagt inn. Du kan n\u00e5 verifisere at pip er tilgjengelig ved \u00e5 kj\u00f8re pip --version . Sett opp config fil for pip \u00b6 Ved \u00e5 sette opp en pip.ini fil slipper du den lange kommandoen for \u00e5 installere pakker: Failure pip install xxx --trusted-host pypi.org --trusted-host files.pythonhosted.org Disse argumentene kan isteden skrives inn i en pip.ini fil p\u00e5 f\u00f8lgende vis: I mappen %APPDATA%\\ , opprett mappen pip . I mappen pip opprett filen pip.ini . Pip leter etter configfiler automatisk p\u00e5 denne globale plasseringen. Innhold i pip.ini: [global] trusted-host = pypi.python.org pypi.org files.pythonhosted.org N\u00e5 kan pip oppgraderes med kommandoen: python -m pip install -U pip","title":"PIP og oppsett av proxy"},{"location":"vdi/pip/#pip-og-oppsett-av-proxy","text":"","title":"PIP og oppsett av proxy"},{"location":"vdi/pip/#sjekk-om-du-har-pip","text":"Kj\u00f8r pip --version for \u00e5 se om pip er tilgjengelig: pip --version Success pip --version pip 21 .1.1 from c: \\u sers \\* **** \\a ppdata \\l ocal \\p rograms \\p ython \\p ython38 \\l ib \\s ite-packages \\p ip ( python 3 .8 ) Fortsett til \"Sett opp config fil for pip\" Failure pip --version 'pip' is not recognized as an internal or external command, operable program or batch file. Kj\u00f8r py -3 -m ensurepip for \u00e5 se om pip allerede eksisterer. Looking in links: c: \\U sers \\* *** \\A ppData \\L ocal \\T emp \\t mp4r6s0n91 Requirement already satisfied: setuptools in c: \\u sers \\* *** \\a ppdata \\l ocal \\p rograms \\p ython \\p ython38 \\l ib \\s ite-packages ( 58 .1.0 ) Requirement already satisfied: pip in c: \\u sers \\* *** \\a ppdata \\l ocal \\p rograms \\p ython \\p ython38 \\l ib \\s ite-packages ( 21 .2.4 ) I dette tilfelle m\u00e5 milj\u00f8variabelen PATH oppdateres. Bruk gjerne Fil utforsker for \u00e5 finne riktig path men normalt ligger PIP under: c: \\u sers \\< brukernavn> \\a ppdata \\l ocal \\p rograms \\p ython \\p ython38 \\s cripts Info Se legg til milj\u00f8variabler hvis du ikke vet hvordan du oppdatere PATH . Husk at du m\u00e5 lukke og \u00e5pne cmd (ledetekst) etter path variabel er lagt inn. Du kan n\u00e5 verifisere at pip er tilgjengelig ved \u00e5 kj\u00f8re pip --version .","title":"Sjekk om du har PIP"},{"location":"vdi/pip/#sett-opp-config-fil-for-pip","text":"Ved \u00e5 sette opp en pip.ini fil slipper du den lange kommandoen for \u00e5 installere pakker: Failure pip install xxx --trusted-host pypi.org --trusted-host files.pythonhosted.org Disse argumentene kan isteden skrives inn i en pip.ini fil p\u00e5 f\u00f8lgende vis: I mappen %APPDATA%\\ , opprett mappen pip . I mappen pip opprett filen pip.ini . Pip leter etter configfiler automatisk p\u00e5 denne globale plasseringen. Innhold i pip.ini: [global] trusted-host = pypi.python.org pypi.org files.pythonhosted.org N\u00e5 kan pip oppgraderes med kommandoen: python -m pip install -U pip","title":"Sett opp config fil for pip"},{"location":"vdi/python/","text":"Python \u00b6 Sjekk om Python er installert med py --version . Python versionen m\u00e5 v\u00e6re >= 3.8. py --version Success $ py --version Python 3 .8.10 Fortsett til PIP Failure $ py --version Python 3 .6.4 For gammel version av Python Last ned Python Failure $ py --version python is not recognized as an internal or external command, operable program, or batch file Python er ikke installert Last ned Python","title":"Python"},{"location":"vdi/python/#python","text":"Sjekk om Python er installert med py --version . Python versionen m\u00e5 v\u00e6re >= 3.8. py --version Success $ py --version Python 3 .8.10 Fortsett til PIP Failure $ py --version Python 3 .6.4 For gammel version av Python Last ned Python Failure $ py --version python is not recognized as an internal or external command, operable program, or batch file Python er ikke installert Last ned Python","title":"Python"},{"location":"vdi/sqlfluff/","text":"SQLFluff \u00b6 SQLFluff er en linter som hjelper oss med \u00e5 formattere SQL-koden p\u00e5 en fornuftig m\u00e5te. Installering av SQLFluff \u00b6 pip install sqlfluff sqlfluff-templater-dbt","title":"SQLFluff"},{"location":"vdi/sqlfluff/#sqlfluff","text":"SQLFluff er en linter som hjelper oss med \u00e5 formattere SQL-koden p\u00e5 en fornuftig m\u00e5te.","title":"SQLFluff"},{"location":"vdi/sqlfluff/#installering-av-sqlfluff","text":"pip install sqlfluff sqlfluff-templater-dbt","title":"Installering av SQLFluff"},{"location":"vdi/vscode/","text":"Visual Studio Code \u00b6 Bruk https://code.visualstudio.com/download, velg Windows versjonen. Last ned, pakk ut og start programmet code. F\u00f8lg instruksjonene ved innstalleringen.","title":"Visual Studio Code"},{"location":"vdi/vscode/#visual-studio-code","text":"Bruk https://code.visualstudio.com/download, velg Windows versjonen. Last ned, pakk ut og start programmet code. F\u00f8lg instruksjonene ved innstalleringen.","title":"Visual Studio Code"}]}